{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X571\\\\Desktop\\\\RevOfGames-React\\\\src\\\\Formulario.js\";\n//Formulario.js\n//este ficheiro irá conter o código para representar o formulário no ecrã\n//********************************* */\nimport React from 'react';\n/**\r\n * Formulário para adicionar (fazer upload) de um jogo\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Formulario extends React.Component {\n  constructor(props) {\n    super(props); //variáveis para guardar os dados introduzidos pelo utilizador, no formulário\n\n    this.handlerJogoChange = evento => {\n      //validar os valores introduzidos na TextBox (Impede que o utilizador insira números)\n      if (/\\d/.test(evento.target.value)) {\n        evento.target.setCustomValidity(\"Nome do Jogo Inválido\");\n        return;\n      } else {\n        evento.target.setCustomValidity(\"\");\n      } //guardar os dados recolhidos\n\n\n      this.setState({\n        nomeDoJogo: evento.target.value\n      });\n    };\n\n    this.handlerDescricaoChange = evento => {\n      //validar os valores introduzidos na TextBox (Impede que o utilizador insira números)\n      if (/\\d/.test(evento.target.value)) {\n        evento.target.setCustomValidity(\"Nome do Jogo Inválido\");\n        return;\n      } else {\n        evento.target.setCustomValidity(\"\");\n      } //guardar os dados recolhidos\n\n\n      this.setState({\n        nomeDoJogo: evento.target.value\n      });\n    };\n\n    this.handlerFotoChange = evento => {\n      //guardar os dados recolhidos \n      this.setState({\n        FotodoJogo: evento.target.files[0]\n      });\n    };\n\n    this.handlerSubmitForm = evento => {\n      //impedir o formulário de autoenviar os dados para o servidor\n      //essa tarefa cabe ao componente App.js\n      evento.preventDefault(); //prepração dos dados para serem enviados para a App.js\n      //podemos já enviar os dados prontos para serem adicionados à API\n\n      let dadosFormulario = {\n        Nome: this.state.nomeDoJogo,\n        UpFotografia: this.state.FotodoJogo,\n        DescJogo: this.state.descricaodoJogo\n      }; //concretizar a exportação dos dados para a App.js\n\n      this.props.outDadosJogos(dadosFormulario);\n    };\n\n    this.state = {\n      nomeDoJogo: \"\",\n      FotodoJogo: null,\n      DescJogo: \"\"\n    };\n  }\n  /**\r\n   * processar os dados fornecidos pelo utilizador sobre o nome do Jogo\r\n   * @param {*} evento - dados adicionados pelo utilizador \r\n   * \r\n   */\n\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //o 'return' só consegue devolver um objeto\n      _jsxDEV(\"form\", {\n        onSubmit: this.handlerSubmitForm,\n        encType: \"multipart/form-data\",\n        children: [\"Jogo: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.nomeDoJogo,\n          onChange: this.handlerJogoChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 23\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 66\n        }, this), \"Foto do Jogo: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.handlerFotoChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 31\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 74\n        }, this), \"Descricao: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.nomeDoJogo,\n          onChange: this.handlerDescricaoChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 28\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 71\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Adicionar Jogo\",\n          className: \"btn btn-outline-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nexport default Formulario;","map":{"version":3,"sources":["C:/Users/X571/Desktop/RevOfGames-React/src/Formulario.js"],"names":["React","Formulario","Component","constructor","props","handlerJogoChange","evento","test","target","value","setCustomValidity","setState","nomeDoJogo","handlerDescricaoChange","handlerFotoChange","FotodoJogo","files","handlerSubmitForm","preventDefault","dadosFormulario","Nome","state","UpFotografia","DescJogo","descricaodoJogo","outDadosJogos","render"],"mappings":"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","sourcesContent":["//Formulario.js\r\n//este ficheiro irá conter o código para representar o formulário no ecrã\r\n//********************************* */\r\n\r\nimport React from 'react'\r\n\r\n\r\n\r\n/**\r\n * Formulário para adicionar (fazer upload) de um jogo\r\n */\r\nclass Formulario extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        //variáveis para guardar os dados introduzidos pelo utilizador, no formulário\r\n        this.state = {\r\n            nomeDoJogo: \"\",\r\n            FotodoJogo:null,\r\n            DescJogo:\"\"\r\n        } \r\n    }\r\n\r\n    /**\r\n     * processar os dados fornecidos pelo utilizador sobre o nome do Jogo\r\n     * @param {*} evento - dados adicionados pelo utilizador \r\n     * \r\n     */\r\n    handlerJogoChange = (evento) =>{\r\n        //validar os valores introduzidos na TextBox (Impede que o utilizador insira números)\r\n        if(/\\d/.test(evento.target.value)){\r\n            evento.target.setCustomValidity(\"Nome do Jogo Inválido\");\r\n            return;\r\n        }else {\r\n            evento.target.setCustomValidity(\"\");\r\n        }\r\n\r\n        //guardar os dados recolhidos\r\n        this.setState({\r\n            nomeDoJogo: evento.target.value\r\n        });\r\n    }\r\n\r\n    /**\r\n     * processar os dados fornecidos pelo utilizador sobre o nome do Jogo\r\n     * @param {*} evento - dados adicionados pelo utilizador  \r\n     *          \r\n    */\r\n     handlerDescricaoChange = (evento) =>{\r\n        //validar os valores introduzidos na TextBox (Impede que o utilizador insira números)\r\n        if(/\\d/.test(evento.target.value)){\r\n            evento.target.setCustomValidity(\"Nome do Jogo Inválido\");\r\n            return;\r\n        }else {\r\n            evento.target.setCustomValidity(\"\");\r\n        }\r\n\r\n        //guardar os dados recolhidos\r\n        this.setState({\r\n            nomeDoJogo: evento.target.value\r\n        });\r\n    }\r\n\r\n    /**\r\n     * processar os dados fornecidos pelo utilizador no upload da foto do jogo\r\n     * @param {} evento - dados adicionados pelo utilizador\r\n     */\r\n    handlerFotoChange = (evento) => {\r\n        //guardar os dados recolhidos \r\n        this.setState({\r\n            FotodoJogo: evento.target.files[0]\r\n        });\r\n    }\r\n\r\n    /**\r\n     * handler para processar os dados fornecidos pelo Formulário\r\n     * @param {*} evento \r\n     */\r\n    handlerSubmitForm = (evento) =>{\r\n        //impedir o formulário de autoenviar os dados para o servidor\r\n        //essa tarefa cabe ao componente App.js\r\n        evento.preventDefault();\r\n        \r\n        //prepração dos dados para serem enviados para a App.js\r\n        //podemos já enviar os dados prontos para serem adicionados à API\r\n        let dadosFormulario = {\r\n            Nome: this.state.nomeDoJogo,\r\n            UpFotografia: this.state.FotodoJogo,\r\n            DescJogo: this.state.descricaodoJogo\r\n        };\r\n\r\n        //concretizar a exportação dos dados para a App.js\r\n        this.props.outDadosJogos(dadosFormulario);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            //o 'return' só consegue devolver um objeto\r\n            <form onSubmit={this.handlerSubmitForm} encType=\"multipart/form-data\">\r\n                Jogo: <input type=\"text\"\r\n                             value={this.state.nomeDoJogo}\r\n                             onChange={this.handlerJogoChange}/> <br />\r\n                Foto do Jogo: <input type=\"file\"  \r\n                                     onChange={this.handlerFotoChange}/> <br />  \r\n                Descricao: <input type=\"text\"\r\n                             value={this.state.nomeDoJogo}\r\n                             onChange={this.handlerDescricaoChange}/> <br />\r\n                <input type=\"submit\" value=\"Adicionar Jogo\" className=\"btn btn-outline-primary\" />           \r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Formulario;"]},"metadata":{},"sourceType":"module"}